// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestApp.Models;

#nullable disable

namespace Quest.Migrations
{
    [DbContext(typeof(QuestDbContext))]
    partial class QuestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("QuestApp.Models.AccessLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxUses")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsedCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AccessLinks");
                });

            modelBuilder.Entity("QuestApp.Models.GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessLinkId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DurationSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccessLinkId");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("QuestApp.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AreaHint")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("QuestApp.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessLinkId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PaidAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("StripePaymentId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccessLinkId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("QuestApp.Models.Progress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessLinkId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkippedTimes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccessLinkId");

                    b.HasIndex("QuestId");

                    b.ToTable("Progresses");
                });

            modelBuilder.Entity("QuestApp.Models.Quest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hint")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<int>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Riddle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeLimitSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("QuestApp.Models.GameSession", b =>
                {
                    b.HasOne("QuestApp.Models.AccessLink", "AccessLink")
                        .WithMany("GameSessions")
                        .HasForeignKey("AccessLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessLink");
                });

            modelBuilder.Entity("QuestApp.Models.Payment", b =>
                {
                    b.HasOne("QuestApp.Models.AccessLink", "AccessLink")
                        .WithMany()
                        .HasForeignKey("AccessLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessLink");
                });

            modelBuilder.Entity("QuestApp.Models.Progress", b =>
                {
                    b.HasOne("QuestApp.Models.AccessLink", "AccessLink")
                        .WithMany("Progress")
                        .HasForeignKey("AccessLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestApp.Models.Quest", "Quest")
                        .WithMany("Progress")
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessLink");

                    b.Navigation("Quest");
                });

            modelBuilder.Entity("QuestApp.Models.Quest", b =>
                {
                    b.HasOne("QuestApp.Models.Location", "Location")
                        .WithMany("Quests")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("QuestApp.Models.AccessLink", b =>
                {
                    b.Navigation("GameSessions");

                    b.Navigation("Progress");
                });

            modelBuilder.Entity("QuestApp.Models.Location", b =>
                {
                    b.Navigation("Quests");
                });

            modelBuilder.Entity("QuestApp.Models.Quest", b =>
                {
                    b.Navigation("Progress");
                });
#pragma warning restore 612, 618
        }
    }
}
